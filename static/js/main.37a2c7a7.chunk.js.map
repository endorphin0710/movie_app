{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","id","title","year","summary","poster","genre","className","src","alt","map","i","key","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","medium_cover_image","genres","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0SA8BeA,MA3Bf,YAAyD,EAAzCC,GAA0C,IAAtCC,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,OAAQC,EAAO,EAAPA,MAC9C,OACI,yBAAKC,UAAU,SACX,yBAAKC,IAAKH,EAAQI,IAAKP,EAAOA,MAAOA,IACrC,yBAAKK,UAAU,cACX,wBAAIA,UAAU,eAAeL,GAC7B,0BAAMK,UAAU,cAAcJ,GAC9B,uBAAGI,UAAU,iBAAiBH,GAC9B,wBAAIG,UAAU,gBACTD,EAAMI,KAAK,SAACJ,EAAMK,GAAP,OACR,wBAAIJ,UAAU,eAAeK,IAAKD,GAAIL,UCmC/CO,G,wNAvCbC,MAAQ,CACNC,WAAW,EACXC,OAAQ,I,EAGVC,U,sBAAY,8BAAAC,EAAA,sEAC6BC,IAAMC,IAAI,4DADvC,gBACWJ,EADX,EACHK,KAAOA,KAAOL,OACrB,EAAKM,SAAS,CACZN,OAAQA,EACRD,WAAW,IAJH,2C,kEASVQ,KAAKN,c,+BAGE,IAAD,EACsBM,KAAKT,MAA1BC,EADD,EACCA,UAAWC,EADZ,EACYA,OAClB,OACE,6BAAST,UAAU,aAClBQ,EACE,yBAAKR,UAAU,UACZ,0BAAMA,UAAU,eAAhB,gBAGF,yBAAKA,UAAU,UACZS,EAAON,KAAK,SAAAc,GAAK,OACjB,kBAAC,EAAD,CAAOZ,IAAKY,EAAMvB,GAAIA,GAAIuB,EAAMvB,GAAIC,MAAOsB,EAAMtB,MAAOC,KAAMqB,EAAMrB,KAAMC,QAASoB,EAAMpB,QAASC,OAAQmB,EAAMC,mBAAoBnB,MAAOkB,EAAME,kB,GA9B5IC,IAAMC,YCHxBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.37a2c7a7.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Movie({id, title, year, summary, poster, genre}){\r\n    return (\r\n        <div className=\"movie\">\r\n            <img src={poster} alt={title} title={title}/>\r\n            <div className=\"movie_data\">\r\n                <h3 className=\"movie_title\">{title}</h3>\r\n                <span className=\"movie_year\">{year}</span>\r\n                <p className=\"movie_summary\">{summary}</p>\r\n                <ul className=\"movie_genres\">\r\n                    {genre.map( (genre,i) => \r\n                        <li className=\"genres_genre\" key={i}>{genre}</li>\r\n                    )}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nMovie.propTypes = {\r\n id: PropTypes.number.isRequired,\r\n title: PropTypes.string.isRequired,\r\n year: PropTypes.number.isRequired,\r\n summary: PropTypes.string.isRequired,\r\n poster: PropTypes.string.isRequired,\r\n genre: PropTypes.arrayOf(PropTypes.string).isRequired \r\n}\r\n\r\nexport default Movie;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport Movie from './Movie';\nimport './Movie.css'\nimport './App.css'\n\nclass App extends React.Component{\n\n  state = {\n    isLoading: true,\n    movies: []\n  }\n\n  getMovies = async()=> {\n    const {data: {data: {movies}}} = await axios.get('https://yts-proxy.now.sh/list_movies.json?sort_by=rating');\n    this.setState({\n      movies: movies,\n      isLoading: false\n    });\n  }\n\n  componentDidMount(){\n    this.getMovies();\n  }\n\n  render(){\n    const {isLoading, movies} = this.state;\n    return (\n      <section className=\"container\">\n      {isLoading ? \n        (<div className=\"loader\">\n            <span className=\"loader_text\">Loading....</span>\n          </div>)\n        :(\n          <div className=\"movies\">\n            {movies.map( movie => (\n             <Movie key={movie.id} id={movie.id} title={movie.title} year={movie.year} summary={movie.summary} poster={movie.medium_cover_image} genre={movie.genres}/>\n            ))}\n          </div>\n        )\n      }\n      </section>\n    )\n  }\n\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}